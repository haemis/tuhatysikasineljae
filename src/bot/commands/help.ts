import { Context } from 'telegraf';
import logger from '../../utils/logger';

export const helpCommand = async (ctx: Context): Promise<void> => {
  try {
    const helpMessage = `
ü§ñ *Virtual Business Card Bot - Help Guide*

*üìã Profile Management:*
‚Ä¢ /profile - Create or edit your professional profile
‚Ä¢ /myprofile - View your own profile  
‚Ä¢ /settings - Manage privacy settings

*üîç Discovery & Search:*
‚Ä¢ /search [query] - Search for professionals
‚Ä¢ /next - Next page of search results
‚Ä¢ /prev - Previous page of search results

*ü§ù Networking:*
‚Ä¢ /connect [username|user_id] - Send connection request
‚Ä¢ /requests - View pending connection requests
‚Ä¢ /accept [user_id] - Accept a connection request
‚Ä¢ /decline [user_id] - Decline a connection request
‚Ä¢ /connections - View your accepted connections
‚Ä¢ /view [username|user_id] - View someone's profile

*üìñ Examples:*
‚Ä¢ /search "software engineer"
‚Ä¢ /search "product manager"
‚Ä¢ /connect john_doe
‚Ä¢ /connect 123456789
‚Ä¢ /view jane_smith
‚Ä¢ /accept 123456789
‚Ä¢ /decline 123456789

*‚öôÔ∏è Privacy Settings:*
‚Ä¢ profile_visible on/off - Show/hide your profile
‚Ä¢ allow_search on/off - Allow others to find you
‚Ä¢ allow_connections on/off - Accept connection requests
‚Ä¢ show_github on/off - Show/hide GitHub username
‚Ä¢ show_linkedin on/off - Show/hide LinkedIn URL
‚Ä¢ show_website on/off - Show/hide website URL
‚Ä¢ show_world_id on/off - Show/hide World ID

*üí° Tips:*
‚Ä¢ Use quotes for multi-word searches: /search "machine learning"
‚Ä¢ You can have up to 10 pending connection requests
‚Ä¢ Search results show 5 profiles per page
‚Ä¢ Use /next and /prev to navigate search results
‚Ä¢ Privacy settings control what others can see about you

*üÜò Need Help?*
If you encounter issues, try:
1. Check your profile exists (/myprofile)
2. Verify privacy settings (/settings)
3. Contact the bot administrator

*üìä Your Stats:*
Use /myprofile to see your profile and /connections to see your network.
    `;

    await ctx.reply(helpMessage, { 
      parse_mode: 'Markdown'
    });

    const userId = ctx.from?.id;
    const username = ctx.from?.username;
    logger.info(`Help command executed for user ${userId} (${username})`);
  } catch (error) {
    logger.error('Error in help command:', error);
    await ctx.reply('Sorry, something went wrong. Please try again later.');
  }
}; 